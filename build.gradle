plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.ec4j.editorconfig' version '0.1.0'
    id 'me.champeau.jmh' version '0.7.2'
    id 'org.flywaydb.flyway' version '10.7.1'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

def querydslVersion = '5.0.0'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Annotation Processors
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    // Libraries
    implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'net.javacrumbs.shedlock:shedlock-spring:6.6.0'
    implementation 'net.javacrumbs.shedlock:shedlock-provider-jdbc-template:6.6.0'
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework:spring-aspects'
    runtimeOnly 'p6spy:p6spy:3.9.1'
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'

    // Flyway 의존성
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'

    // AWS S3 의존성 추가 (Spring Boot 3.x 호환)
    implementation 'software.amazon.awssdk:s3:2.20.26'
    implementation 'software.amazon.awssdk:auth:2.20.26'

    // JMH 의존성 (JMH plugin이 자동으로 처리하므로 제거)

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'com.h2database:h2'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.withType(JavaCompile).configureEach {
    options.generatedSourceOutputDirectory = file("${layout.buildDirectory.get()}/generated/sources/annotationProcessor/java/main")
    options.compilerArgs += ['-parameters']
    options.incremental = false
}

editorconfig {
    includes = ['src/**', 'build.gradle']
    excludes = [
        '**/generated/**',
        "${layout.buildDirectory.get()}/**"
    ]
}

tasks.named('check') {
    dependsOn 'editorconfigCheck'
}

tasks.named('test') {
    useJUnitPlatform()
}

// JMH 설정
jmh {
    iterations = 5
    warmupIterations = 5
    fork = 2
    benchmarkMode = ['avgt'] // Average time
    timeUnit = 'us' // microseconds
    includes = ['.*Benchmark.*']
}
